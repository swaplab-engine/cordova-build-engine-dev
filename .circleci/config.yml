version: 2.1

parameters:
  userId:
    type: string
    default: ""
  buildId:
    type: string
    default: ""
  projectUrl:
    type: string
    default: ""
  appBaseUrl:
    type: string
    default: ""
  buildType:
    type: string
    default: "debug-apk"
  # Parameter ini diperlukan agar server bisa memicu build
  ci_provider:
    type: string
    default: "circleci"
  keystoreUrl:
    type: string
    default: ""
  keystorePassword:
    type: string
    default: ""
  keyAlias:
    type: string
    default: ""
  keyPassword:
    type: string
    default: ""
  timeoutMinutes:
    type: integer
    default: 8

jobs:
  build:
    docker:
      - image: cimg/android:2024.11.1-node
    
    working_directory: ~/project

    environment:
      USER_ID: << pipeline.parameters.userId >>
      BUILD_ID: << pipeline.parameters.buildId >>
      APP_BASE_URL: << pipeline.parameters.appBaseUrl >>
      BUILD_TYPE: << pipeline.parameters.buildType >>
      PROJECT_URL: << pipeline.parameters.projectUrl >>
      KEYSTORE_URL: << pipeline.parameters.keystoreUrl >>
      KEYSTORE_PASSWORD: << pipeline.parameters.keystorePassword >>
      KEY_ALIAS: << pipeline.parameters.keyAlias >>
      KEY_PASSWORD: << pipeline.parameters.keyPassword >>

    steps:
      - run:
          name: "Report Build In Progress & Start Time"
          command: |
            echo 'export START_TIME=$(date +%s)' >> $BASH_ENV
            curl --fail -X POST -H "Content-Type: application/json" -H "X-Build-Secret: $WEBHOOK_SECRET" -d '{"buildId": "<< pipeline.parameters.buildId >>", "userId": "<< pipeline.parameters.userId >>", "status": "log_update", "message": "Memulai proses build..."}' "<< pipeline.parameters.appBaseUrl >>/api/github-webhook"
            curl --fail -X POST -H "Content-Type: application/json" -H "X-Build-Secret: $WEBHOOK_SECRET" -d '{"buildId": "<< pipeline.parameters.buildId >>", "userId": "<< pipeline.parameters.userId >>", "status": "in_progress", "ciProvider": "circleci", "runId": "'"$CIRCLE_WORKFLOW_ID"'"}' "<< pipeline.parameters.appBaseUrl >>/api/github-webhook"

      # ... (Semua langkah lain tetap sama seperti file asli Anda) ...

      - run:
          name: "Build Android Project"
          working_directory: ~/project/cordova-project
          no_output_timeout: << pipeline.parameters.timeoutMinutes >>m
          command: |
            curl --fail -X POST -H "Content-Type: application/json" -H "X-Build-Secret: $WEBHOOK_SECRET" -d '{"buildId": "<< pipeline.parameters.buildId >>", "userId": "<< pipeline.parameters.userId >>", "status": "log_update", "message": "Memulai kompilasi Android (proses ini mungkin lama)..."}' "<< pipeline.parameters.appBaseUrl >>/api/github-webhook";
            
            {
              echo "--- Adding Android Platform ---";
              cordova platform add android;
              echo "--- Installing Android Build Tools 35.0.0 ---";
              yes | sdkmanager --licenses > /dev/null || true;
              sdkmanager "build-tools;35.0.0";
              echo "--- Starting Cordova Build ---";
              if [[ "$BUILD_TYPE" == "debug-apk" ]]; then
                cordova build android --debug -- --gradleArg=--no-daemon;
              else
                cordova build android --release --buildConfig=build.json -- --gradleArg=--no-daemon;
              fi;
              echo "--- Cordova Build Finished ---";
            } > ../build_log.txt 2>&1

      - save_cache:
          key: node-modules-v2-{{ checksum "cordova-project/package.json" }}
          paths:
            - cordova-project/node_modules
      - save_cache:
          key: gradle-cache-v2-{{ checksum "cordova-project/package.json" }}
          paths:
            - /home/circleci/.gradle

      - run:
          name: "Upload Build File and Report Success"
          when: on_success
          command: |
            ARTIFACT_PATH=""
            if [[ "$BUILD_TYPE" == "release-aab" ]]; then
              ARTIFACT_PATH=$(find cordova-project/platforms/android/app/build/outputs/bundle/release -name "*.aab" | head -n 1)
            elif [[ "$BUILD_TYPE" == "release-apk" ]]; then
              ARTIFACT_PATH=$(find cordova-project/platforms/android/app/build/outputs/apk/release -name "*.apk" | head -n 1)
            else
              ARTIFACT_PATH=$(find cordova-project/platforms/android/app/build/outputs/apk/debug -name "*.apk" | head -n 1)
            fi
            if [ -z "$ARTIFACT_PATH" ]; then echo "Build artifact not found!"; exit 1; fi
            UPLOAD_RESPONSE=$(curl -s -w "\n%{http_code}" --fail -X POST -F "buildFile=@$ARTIFACT_PATH" -F "buildId=$BUILD_ID" -F "buildType=$BUILD_TYPE" -H "X-Build-Secret: $WEBHOOK_SECRET" "$APP_BASE_URL/upload-result/$USER_ID")
            HTTP_CODE=$(echo "$UPLOAD_RESPONSE" | tail -n1)
            DOWNLOAD_URL=$(echo "$UPLOAD_RESPONSE" | sed '$d')
            if [[ "$HTTP_CODE" != "200" ]]; then echo "Gagal upload. Kode: $HTTP_CODE"; exit 1; fi
            source $BASH_ENV
            end_time=$(date +%s)
            duration=$((end_time - START_TIME))
            # PERBAIKAN: Menggunakan "circleci" secara langsung
            curl --fail -X POST -H "Content-Type: application/json" -H "X-Build-Secret: $WEBHOOK_SECRET" -d "{\"buildId\": \"$BUILD_ID\", \"userId\": \"$USER_ID\", \"status\": \"complete\", \"durationSeconds\": \"$duration\", \"downloadUrl\": \"$DOWNLOAD_URL\", \"ciProvider\": \"circleci\"}" "$APP_BASE_URL/api/github-webhook"

      - run:
          name: "Upload Log File and Report Failure"
          when: on_fail
          command: |
            cat npm_install_log.txt build_log.txt > final_log.txt 2>/dev/null || cat build_log.txt > final_log.txt 2>/dev/null || echo "Build gagal pada tahap awal." > final_log.txt
            LOG_FILE_PATH="final_log.txt"
            LOG_FILE_NAME="${BUILD_ID}.log"
            # PERBAIKAN: Menggunakan "circleci" secara langsung
            UPLOAD_RESPONSE=$(curl -s -w "\n%{http_code}" -X POST -F "logFile=@${LOG_FILE_PATH};filename=${LOG_FILE_NAME}" -F "buildId=$BUILD_ID" -F "ci_provider=circleci" -H "X-Build-Secret: $WEBHOOK_SECRET" "$APP_BASE_URL/upload-log/$USER_ID")
            HTTP_CODE=$(echo "$UPLOAD_RESPONSE" | tail -n1)
            LOG_URL_FILENAME=$(echo "$UPLOAD_RESPONSE" | sed '$d')
            LOG_URL=""
            if [[ "$HTTP_CODE" == "200" ]]; then LOG_URL="${APP_BASE_URL}/logs/circleci/${USER_ID}/${LOG_URL_FILENAME}"; fi
            LOG_SNIPPET=$(tail -n 20 ${LOG_FILE_PATH} | sed 's|/home/circleci/project/cordova-project/[^ ]*|[PROJECT_PATH]|g' | sed 's/\\/\\\\/g' | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g')
            source $BASH_ENV
            end_time=$(date +%s)
            duration=$((end_time - START_TIME))
            # PERBAIKAN: Menggunakan "circleci" secara langsung
            curl --fail -X POST -H "Content-Type: application/json" -H "X-Build-Secret: $WEBHOOK_SECRET" -d "{\"buildId\": \"$BUILD_ID\", \"userId\": \"$USER_ID\", \"status\": \"failed\", \"durationSeconds\": \"$duration\", \"logUrl\": \"$LOG_URL\", \"logSnippet\": \"$LOG_SNIPPET\", \"ciProvider\": \"circleci\"}" "$APP_BASE_URL/api/github-webhook"

workflows:
  build_cordova_app:
    when: << pipeline.parameters.buildId >>
    jobs:
      - build
