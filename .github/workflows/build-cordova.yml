name: Cordova Build
on:
  repository_dispatch:
    types: [trigger-build]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    timeout-minutes: 8
    steps:


      - name: Notify server (in_progress)
        shell: bash
        env:
          APP_BASE_URL: ${{ github.event.client_payload.appBaseUrl }}
          BUILD_ID: ${{ github.event.client_payload.buildId }}
          USER_ID: ${{ github.event.client_payload.userId }}
          WEBHOOK_SECRET: ${{ secrets.WEBHOOK_SECRET }}
        run: |
          set -euo pipefail
          RUN_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          PAYLOAD=$(printf '{"buildId":"%s","userId":"%s","status":"in_progress","ciProvider":"github","runId":"%s","githubJobUrl":"%s","message":"%s"}' \
            "$BUILD_ID" "$USER_ID" "${{ github.run_id }}" "$RUN_URL" "Loading Docker build container image...")
          HTTP_CODE=$(curl -sS -w "%{http_code}" -X POST \
            -H "Content-Type: application/json" \
            -H "X-Build-Secret: ${WEBHOOK_SECRET}" \
            -d "$PAYLOAD" \
            "${APP_BASE_URL}/api/github-webhook" || echo "000")
          echo "Notify server response HTTP_CODE=${HTTP_CODE}" || true




    
      # 1) Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # 2) Restore Gradle cache (HARUS sebelum docker run)
      - name: Restore Gradle cache
        uses: actions/cache@v4
        with:
          path: |
            ./.cache/gradle
            ./.gradle/wrapper
          key: gradle-cache-${{ runner.os }}-${{ github.ref_name }}
          restore-keys: |
            gradle-cache-${{ runner.os }}-

      # 3) Restore npm cache (HARUS sebelum docker run)
      - name: Restore npm cache
        uses: actions/cache@v4
        with:
          path: ./.cache/npm
          key: npm-cache-${{ runner.os }}-${{ github.ref_name }}
          restore-keys: |
            npm-cache-${{ runner.os }}-

      # 4) Ensure cache dirs exist & fix permissions so container can use them
      - name: Ensure cache directories exist & fix permissions
        run: |
          mkdir -p ./.cache/gradle ./.cache/npm ./.gradle/wrapper
          chmod -R 0777 ./.cache || true

      
      # --- NEW STEP: Pre-pull image to reduce docker run delay (optional but recommended) ---
      - name: Pre-pull Cordova Build Engine image
        run: |
          docker pull ghcr.io/swaplab-engine/cordova-build-engine:main || true

      # 5) Login to GHCR with PAT (untuk menarik image private)
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: swaplab-engine
          password: ${{ secrets.GHCR_PULL_TOKEN }}

      # 6) Run your private container (docker run)
      - name: Build Cordova Project via Secure Engine
        run: |
          docker run --rm \
            -v "${{ github.workspace }}:/github/workspace" \
            -w /github/workspace \
            -e INPUT_APPBASEURL="${{ github.event.client_payload.appBaseUrl }}" \
            -e INPUT_BUILDID="${{ github.event.client_payload.buildId }}" \
            -e INPUT_USERID="${{ github.event.client_payload.userId }}" \
            -e INPUT_PROJECTURL="${{ github.event.client_payload.projectUrl }}" \
            -e INPUT_BUILDTYPE="${{ github.event.client_payload.buildType }}" \
            -e INPUT_KEYSTOREURL="${{ github.event.client_payload.keystoreUrl }}" \
            -e INPUT_KEYSTOREPASSWORD="${{ secrets.KEYSTORE_PASSWORD }}" \
            -e INPUT_KEYALIAS="${{ secrets.KEY_ALIAS }}" \
            -e INPUT_KEYPASSWORD="${{ secrets.KEY_PASSWORD }}" \
            -e INPUT_WEBHOOKSECRET="${{ secrets.WEBHOOK_SECRET }}" \
            -e INPUT_R2ACCOUNTID="${{ secrets.R2_ACCOUNT_ID }}" \
            -e INPUT_R2ACCESSKEYID="${{ secrets.R2_ACCESS_KEY_ID }}" \
            -e INPUT_R2SECRETACCESSKEY="${{ secrets.R2_SECRET_ACCESS_KEY }}" \
            -e INPUT_R2BUCKETNAME="${{ secrets.R2_BUCKET_NAME }}" \
            -e INPUT_R2PUBLICURL="${{ secrets.R2_PUBLIC_URL }}" \
            -e INPUT_GITHUBJOBURL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
            -e GITHUB_RUN_ID="${{ github.run_id }}" \
            -e SKIP_ENTRYPOINT_IN_PROGRESS=true \
            ghcr.io/swaplab-engine/cordova-build-engine:main
