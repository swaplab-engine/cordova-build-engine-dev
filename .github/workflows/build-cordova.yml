name: Ionic Capacitor Build (APK/AAB)

on:
  repository_dispatch:
    types: [trigger-build]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    timeout-minutes: ${{ github.event.client_payload.timeoutMinutes }}

    steps:
      - name: Dump client_payload to log
        run: echo "${{ toJSON(github.event.client_payload) }}"

      # <-- BARU: Langkah penting ini ditambahkan
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Set up Node.js v20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - name: Install Ionic and Capacitor CLI
        run: npm install -g @ionic/cli @capacitor/cli

      - name: Download and Unzip Project
        run: |
          ZIP_URL="${{ github.event.client_payload.projectUrl }}"
          curl -L -o capacitorProject.zip "$ZIP_URL"
          mkdir capacitor-project
          unzip capacitorProject.zip -d capacitor-project

      - name: Cache project dependencies (node_modules)
        uses: actions/cache@v4
        with:
          path: capacitor-project/node_modules
          key: ${{ runner.os }}-npm-project-${{ hashFiles('capacitor-project/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-project-

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('capacitor-project/android/**/*.gradle*', 'capacitor-project/android/**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      
      - name: Run Build Script
        working-directory: ./capacitor-project
        env:
          KEYSTORE_URL: ${{ github.event.client_payload.keystoreUrl }}
          KEYSTORE_PASSWORD: ${{ github.event.client_payload.keystorePassword }}
          KEY_ALIAS: ${{ github.event.client_payload.keyAlias }}
          KEY_PASSWORD: ${{ github.event.client_payload.keyPassword }}
          BUILD_TYPE: ${{ github.event.client_payload.buildType }}
        run: |
          # Menyalin skrip build dari repositori yang sudah di-checkout
          # Path sekarang menjadi langsung dari root workspace
          cp .github/scripts/build_android.sh .
          chmod +x build_android.sh
          # Menjalankan skrip dan menyimpan lognya
          ./build_android.sh > build_log.txt 2>&1

      - name: Upload Build File to Your Server
        if: success()
        run: |
          BUILD_TYPE="${{ github.event.client_payload.buildType }}"
          USER_ID="${{ github.event.client_payload.userId }}"
          ARTIFACT_PATH=""
          if [[ "$BUILD_TYPE" == "release-aab" ]]; then
            ARTIFACT_PATH=$(find capacitor-project/android/app/build/outputs/bundle/release -name "*.aab" | head -n 1)
          else
            ARTIFACT_PATH=$(find capacitor-project/android/app/build/outputs/apk/release -name "*.apk" | head -n 1)
          fi
          if [ -z "$ARTIFACT_PATH" ]; then
            echo "::error::Build artifact not found!"
            exit 1
          fi
          curl -X POST \
            -F "buildFile=@$ARTIFACT_PATH" \
            -F "buildId=${{ github.event.client_payload.buildId }}" \
            -F "buildType=$BUILD_TYPE" \
            -H "X-Build-Secret: ${{ secrets.WEBHOOK_SECRET }}" \
            https://cordova.build.appjs.net/upload-result/$USER_ID

      - name: Filter and Upload Error Log
        if: failure()
        run: |
          USER_ID="${{ github.event.client_payload.userId }}"
          LOG_FILE="capacitor-project/build_log.txt"
          REDACTED_LOG_FILE="capacitor-project/build_log_redacted.txt"
          if [ ! -f "$LOG_FILE" ]; then
            echo "Build gagal pada tahap sangat awal." > "$LOG_FILE"
          fi
          sed \
            -e 's|https?://cordova\.build\.appjs\.net[^ ]*|[User_privacy_security_PATH_is_hidden]|g' \
            -e 's|/home/runner/work/[^ ]*|[User_privacy_security_PATH_is_hidden]|g' \
            -e 's|/opt/hostedtoolcache/[^ ]*|[User_privacy_security_PATH_is_hidden]|g' \
            -e 's|[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}|[User_privacy_security_PATH_is_hidden]|g' \
            "$LOG_FILE" > "$REDACTED_LOG_FILE"
          curl -X POST \
            -F "logFile=@$REDACTED_LOG_FILE" \
            -F "buildId=${{ github.event.client_payload.buildId }}" \
            -H "X-Build-Secret: ${{ secrets.WEBHOOK_SECRET }}" \
            https://cordova.build.appjs.net/upload-log/$USER_ID
