# .github/workflows/build-cordova.yml

name: Build Cordova DEBUG APK from Upload

on:
  repository_dispatch:
    types: [trigger-build]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Set up Node.js v20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install Cordova CLI
        run: npm install -g cordova

      - name: Download and Unzip Project
        run: |
          ZIP_URL="${{ github.event.client_payload.url }}"
          echo "Downloading project from $ZIP_URL"
          curl -L --retry 5 --retry-delay 2 -o cordovaProject.zip "$ZIP_URL"
          mkdir cordova-project
          unzip cordovaProject.zip -d cordova-project
          
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('cordova-project/**/*.gradle*', 'cordova-project/**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build Debug APK
        run: |
          cd cordova-project
          echo "Installing project dependencies..."
          npm install
          echo "Adding Android platform..."
          cordova platform add android
          echo "Building DEBUG Android APK..."
          # Cukup jalankan 'cordova build android' untuk debug
          cordova build android -- --gradleArg=--no-daemon

      - name: Upload Debug APK as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          # Path untuk APK debug berbeda (ada di folder 'debug')
          path: cordova-project/platforms/android/app/build/outputs/apk/debug/*.apk
