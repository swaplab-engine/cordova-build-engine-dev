name: Cordova Build (Debug/Release APK/AAB)

on:
  repository_dispatch:
    types: [trigger-build]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Dump client_payload to log
        run: echo "${{ toJSON(github.event.client_payload) }}"

      - name: Set up Node.js v20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache global npm packages
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-global-v1
          restore-keys: |
            ${{ runner.os }}-npm-global-

      - name: Install Cordova CLI
        run: npm install -g cordova

      - name: Download and Unzip Project
        run: |
          ZIP_URL="${{ github.event.client_payload.projectUrl }}"
          curl -L -o cordovaProject.zip "$ZIP_URL"
          mkdir cordova-project
          unzip cordovaProject.zip -d cordova-project

      - name: Cache project dependencies (node_modules)
        uses: actions/cache@v4
        with:
          path: cordova-project/node_modules
          key: ${{ runner.os }}-npm-project-${{ hashFiles('cordova-project/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-project-

      # KEMBALI KE LANGKAH TERPISAH: Ini adalah bagian persiapan yang stabil
      - name: Prepare Signing Configuration
        run: |
          cd cordova-project
          KEYSTORE_URL="${{ github.event.client_payload.keystoreUrl }}"
          curl -L -o release.jks "$KEYSTORE_URL"
          PACKAGE_TYPE="apk"
          if [[ "${{ github.event.client_payload.buildType }}" == "release-aab" ]]; then
            PACKAGE_TYPE="bundle"
          fi
          cat > build.json << EOF
          {
            "android": { "release": { "keystore": "release.jks", "storePassword": "${{ github.event.client_payload.keystorePassword }}", "alias": "${{ github.event.client_payload.keyAlias }}", "password": "${{ github.event.client_payload.keyPassword }}", "packageType": "$PACKAGE_TYPE" } }
          }
          EOF

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('cordova-project/**/*.gradle*', 'cordova-project/**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # FOKUS PENANGKAPAN ERROR: Redirection (> build_log.txt) hanya diterapkan di sini
      - name: Install Dependencies and Build Project
        run: |
          cd cordova-project
          {
            echo "Installing project dependencies..."
            npm install
            
            echo "Building Cordova project..."
            cordova platform add android
            cordova build android --release --buildConfig=build.json -- --gradleArg=--no-daemon
          } > build_log.txt 2>&1

      - name: Upload Build File to Your Server
        if: success()
        run: |
          BUILD_TYPE="${{ github.event.client_payload.buildType }}"
          USER_ID="${{ github.event.client_payload.userId }}"
          ARTIFACT_PATH=""
          if [[ "$BUILD_TYPE" == "release-aab" ]]; then
            ARTIFACT_PATH=$(find cordova-project/platforms/android/app/build/outputs/bundle/release -name "*.aab" | head -n 1)
          else
            ARTIFACT_PATH=$(find cordova-project/platforms/android/app/build/outputs/apk/release -name "*.apk" | head -n 1)
          fi
          if [ -z "$ARTIFACT_PATH" ]; then
            echo "::error::Build artifact not found!"
            exit 1
          fi
          curl -X POST \
            -F "buildFile=@$ARTIFACT_PATH" \
            -F "buildId=${{ github.event.client_payload.buildId }}" \
            -F "buildType=$BUILD_TYPE" \
            -H "X-Build-Secret: ${{ secrets.WEBHOOK_SECRET }}" \
            https://cordova.build.appjs.net/upload-result/$USER_ID

      - name: Upload Error Log to Server
        if: failure()
        run: |
          USER_ID="${{ github.event.client_payload.userId }}"
          LOG_FILE="cordova-project/build_log.txt"
          if [ ! -f "$LOG_FILE" ]; then
            echo "Build gagal pada tahap sangat awal." > $LOG_FILE
            echo "Kemungkinan terjadi kesalahan saat mengunduh atau mempersiapkan dependensi awal." >> $LOG_FILE
            echo "Tidak ada log build detail yang dapat dihasilkan." >> $LOG_FILE
            echo "Mohon periksa kembali file proyek Anda (config.xml, package.json) dan coba lagi." >> $LOG_FILE
          fi
          curl -X POST \
            -F "logFile=@$LOG_FILE" \
            -F "buildId=${{ github.event.client_payload.buildId }}" \
            -H "X-Build-Secret: ${{ secrets.WEBHOOK_SECRET }}" \
            https://cordova.build.appjs.net/upload-log/$USER_ID
