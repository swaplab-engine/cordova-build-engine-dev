# .github/workflows/build-cordova.yml
name: Cordova Build (Debug or Release)

on:
  repository_dispatch:
    types: [trigger-build]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      # --- LANGKAH DEBUG BARU ---
      - name: Dump client_payload to log
        run: echo "${{ toJSON(github.event.client_payload) }}"

      - name: Checkout repository code
        uses: actions/checkout@v4
      
      # ... (Langkah setup Node, Java, Cordova, Download, Cache tetap sama) ...
      - name: Set up Node.js v20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Install Cordova CLI
        run: npm install -g cordova
      - name: Download and Unzip Project
        run: |
          ZIP_URL="${{ github.event.client_payload.projectUrl }}"
          curl -L -o cordovaProject.zip "$ZIP_URL"
          mkdir cordova-project
          unzip cordovaProject.zip -d cordova-project
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('cordova-project/**/*.gradle*', 'cordova-project/**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Prepare for Release Build
        if: github.event.client_payload.buildType == 'release'
        run: |
          echo "Preparing for RELEASE build..."
          cd cordova-project
          KEYSTORE_URL="${{ github.event.client_payload.keystoreUrl }}"
          curl -L -o release.jks "$KEYSTORE_URL"
          echo "Creating build.json..."
          cat > build.json << EOF
          {
            "android": {
              "release": {
                "keystore": "release.jks",
                "storePassword": "${{ github.event.client_payload.keystorePassword }}",
                "alias": "${{ github.event.client_payload.keyAlias }}",
                "password": "${{ github.event.client_payload.keyPassword }}",
                "packageType": "apk"
              }
            }
          }
          EOF

      - name: Build Cordova Project
        run: |
          cd cordova-project
          npm install
          cordova platform add android
          if [[ "${{ github.event.client_payload.buildType }}" == "release" ]]; then
            echo "Building RELEASE Android APK..."
            cordova build android --release -- --gradleArg=--no-daemon
          else
            echo "Building DEBUG Android APK..."
            cordova build android -- --gradleArg=--no-daemon
          fi

      - name: Upload APK to Your Server
        run: |
          BUILD_TYPE="${{ github.event.client_payload.buildType }}"
          if [[ "$BUILD_TYPE" == "release" ]]; then
            APK_PATH=$(find cordova-project/platforms/android/app/build/outputs/apk/release -name "*.apk" | head -n 1)
          else
            APK_PATH=$(find cordova-project/platforms/android/app/build/outputs/apk/debug -name "*.apk" | head -n 1)
          fi
          echo "Uploading $APK_PATH to server..."
          # PERBAIKAN: Kirim juga buildType kembali ke server untuk penamaan file
          curl -X POST \
            -F "apkFile=@$APK_PATH" \
            -F "buildId=${{ github.event.client_payload.buildId }}" \
            -F "buildType=$BUILD_TYPE" \
            -H "X-Build-Secret: ${{ secrets.WEBHOOK_SECRET }}" \
            https://cordova.build.appjs.net/upload-result

      - name: Notify Server of Failure
        if: failure()
        run: |
          echo "Build failed. Notifying server..."
          curl -X POST \
            -H "Content-Type: application/json" \
            -d '{
              "buildId": "${{ github.event.client_payload.buildId }}",
              "errorUrl": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
              "secret": "${{ secrets.WEBHOOK_SECRET }}"
            }' \
            https://cordova.build.appjs.net/build-failed
